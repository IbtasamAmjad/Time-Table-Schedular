{"ast":null,"code":"var _jsxFileName = \"E:\\\\f\\\\Semester Works\\\\4rth Semester\\\\Analysis of Algorithms\\\\myProj\\\\CS311S20PID25\\\\timetable_frontend\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport './App.css';\nimport Pagination from \"./pagination\";\nimport Classes from \"./timeTableInput/classes\";\nimport ClassRooms from \"./timeTableInput/classrooms\";\nimport Teachers from \"./timeTableInput/teachers\";\nimport Courses from \"./timeTableInput/courses\";\nimport TimeTable from \"./timeTableOutput/tableDesign2\";\nimport { generateTableWithPost } from \"./http/api\";\nimport Footer2 from \"./footer/footer2\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      classRooms: [],\n      classes: [],\n      teachers: [],\n      courses: [],\n      sessionsName: [],\n      teachersName: [],\n      generatedTimeTable: [],\n      progressValue: 0\n    };\n\n    this.handleClassRooms = classRooms => {\n      this.setState({\n        classRooms,\n        progressValue: 25\n      }); //setting the classRooms array and progress value in the state\n    };\n\n    this.handleClasses = classes => {\n      const sessionsName = [];\n      classes.map(clas => {\n        //map to iterate over classes\n        sessionsName.push(clas[0]); //pushing the classes name into sessionsName\n      });\n      this.setState({\n        classes,\n        sessionsName,\n        progressValue: 50\n      }); //setting the classes, sessionName array and progress value in the state\n    };\n\n    this.handleTeachers = teachers => {\n      const teachersName = [];\n      teachers.map(teacher => {\n        //map to iterate over teachers\n        teachersName.push(teacher[0]); //pushing the teacher name into sessionsName\n      });\n      this.setState({\n        teachers,\n        teachersName,\n        progressValue: 75\n      }); //setting values to the state\n    };\n\n    this.handelCourses = courses => {\n      this.setState({\n        courses,\n        progressValue: 100\n      }); //setting values to state\n    };\n\n    this.generateTable = async () => {\n      // getting the values from state and making data object to send to the backend through api\n      const data = {\n        classRooms: this.state.classRooms,\n        classes: this.state.classes,\n        courses: this.state.courses,\n        teachers: this.state.teachers\n      }; //try and cath block to handle exceptions\n\n      try {\n        const table = await generateTableWithPost(data); //calling the function from api component \n\n        this.setState({\n          generatedTimeTable: table,\n          classRooms: [],\n          classes: [],\n          courses: [],\n          teachers: []\n        }); //setting values to state\n\n        if (table.length === 0) {\n          toast.error(\"Table Generate Error input fields are empty\"); //if response length is 0 that mean empty data is sended to backend\n        }\n      } catch (error) {\n        //exception handling\n        toast.error(\"Table Generate Error: \" + error.message); //showing toast notification on exception in generating table\n      }\n    };\n  }\n\n  ///this part is going to render \n  render() {\n    const {\n      teachersName,\n      sessionsName,\n      generatedTimeTable,\n      progressValue\n    } = this.state; //values from state\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(ToastContainer, {\n      autoClose: 5000,\n      position: toast.POSITION.TOP_RIGHT,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Pagination, {\n      onProgressValue: progressValue,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      path: \"/\",\n      exact: true,\n      render: props => /*#__PURE__*/React.createElement(ClassRooms, Object.assign({}, props, {\n        onClassRooms: this.handleClassRooms,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 58\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }\n    }), progressValue === 25 ? /*#__PURE__*/React.createElement(Route, {\n      path: \"/home/classes\",\n      exact: true,\n      render: props => /*#__PURE__*/React.createElement(Classes, Object.assign({}, props, {\n        onClasses: this.handleClasses,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 70\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 15\n      }\n    }) : null, progressValue === 50 ? /*#__PURE__*/React.createElement(Route, {\n      path: \"/home/teachers\",\n      exact: true,\n      render: props => /*#__PURE__*/React.createElement(Teachers, Object.assign({}, props, {\n        onHandleTeachers: this.handleTeachers,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 73\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 15\n      }\n    }) : null, progressValue === 75 ? /*#__PURE__*/React.createElement(Route, {\n      path: \"/home/courses\",\n      exact: true,\n      render: props => /*#__PURE__*/React.createElement(Courses, Object.assign({}, props, {\n        onTeachersName: teachersName,\n        onSessionsName: sessionsName,\n        onCourses: this.handelCourses,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 72\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 15\n      }\n    }) : null, progressValue === 100 ? /*#__PURE__*/React.createElement(Route, {\n      path: \"/home/table\",\n      exact: true,\n      render: props => /*#__PURE__*/React.createElement(TimeTable, Object.assign({}, props, {\n        onGenerateTable: this.generateTable,\n        onGeneratedTimeTable: generatedTimeTable,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 70\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 15\n      }\n    }) : null, /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Footer2, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }\n    }), \" \");\n  }\n\n}\n\nexport default App; //default export app componet to handle in index.js file","map":{"version":3,"sources":["E:/f/Semester Works/4rth Semester/Analysis of Algorithms/myProj/CS311S20PID25/timetable_frontend/src/App.js"],"names":["React","Component","Switch","Route","Redirect","Pagination","Classes","ClassRooms","Teachers","Courses","TimeTable","generateTableWithPost","Footer2","ToastContainer","toast","App","state","classRooms","classes","teachers","courses","sessionsName","teachersName","generatedTimeTable","progressValue","handleClassRooms","setState","handleClasses","map","clas","push","handleTeachers","teacher","handelCourses","generateTable","data","table","length","error","message","render","POSITION","TOP_RIGHT","props"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport {Switch, Route, Redirect} from \"react-router-dom\";\r\n\r\nimport './App.css';\r\nimport Pagination from \"./pagination\";\r\nimport Classes from \"./timeTableInput/classes\";\r\nimport ClassRooms from \"./timeTableInput/classrooms\";\r\nimport Teachers from \"./timeTableInput/teachers\";\r\nimport Courses from \"./timeTableInput/courses\";\r\nimport TimeTable from \"./timeTableOutput/tableDesign2\";\r\nimport {generateTableWithPost} from \"./http/api\";\r\nimport Footer2 from \"./footer/footer2\";\r\n\r\n\r\nimport {ToastContainer, toast} from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\"\r\n\r\n\r\nclass App extends Component {\r\n\r\n//state of component \r\n  state = {\r\n    classRooms: [], \r\n    classes: [],\r\n    teachers: [],\r\n    courses: [],\r\n    sessionsName: [],\r\n    teachersName: [],\r\n    generatedTimeTable: [],\r\n    progressValue: 0\r\n  }\r\n\r\n  // this method will be called by classRooms component when sumbit button clicked in that component\r\n  handleClassRooms = (classRooms) => {\r\n    this.setState({classRooms, progressValue: 25})  //setting the classRooms array and progress value in the state\r\n  }\r\n\r\n  // this method will be called by classes component when sumbit button clicked in that component\r\n  handleClasses = (classes) => {\r\n    const sessionsName = [];\r\n\r\n    classes.map(clas => {     //map to iterate over classes\r\n      sessionsName.push(clas[0]);   //pushing the classes name into sessionsName\r\n    })\r\n\r\n    this.setState({classes, sessionsName, progressValue: 50}) //setting the classes, sessionName array and progress value in the state\r\n  }\r\n\r\n  // this method will be called by teachers component when sumbit button clicked in that component\r\n  handleTeachers = (teachers) => {\r\n    const teachersName = [];\r\n    teachers.map(teacher => { //map to iterate over teachers\r\n      teachersName.push(teacher[0]);  //pushing the teacher name into sessionsName\r\n    })\r\n\r\n    this.setState({teachers, teachersName, progressValue: 75})  //setting values to the state\r\n  }\r\n\r\n  // this method will be called by courses component when sumbit button clicked in that component\r\n  handelCourses = (courses) => {\r\n    this.setState({courses, progressValue: 100})  //setting values to state\r\n  }\r\n\r\n  // this method will be called by table component when generateTable button clicked in that component\r\n  generateTable = async() => {\r\n    \r\n    // getting the values from state and making data object to send to the backend through api\r\n    const data = {\r\n      classRooms: this.state.classRooms,\r\n      classes: this.state.classes,\r\n      courses: this.state.courses,\r\n      teachers: this.state.teachers\r\n    }\r\n\r\n    //try and cath block to handle exceptions\r\n    try {\r\n      const table = await generateTableWithPost(data);    //calling the function from api component \r\n      this.setState({generatedTimeTable: table, classRooms: [], classes: [], courses: [], teachers: []})  //setting values to state\r\n\r\n      if(table.length === 0){\r\n        toast.error(\"Table Generate Error input fields are empty\");  //if response length is 0 that mean empty data is sended to backend\r\n      }\r\n\r\n    } catch (error) {     //exception handling\r\n      toast.error(\"Table Generate Error: \" + error.message);    //showing toast notification on exception in generating table\r\n    }\r\n  }\r\n  \r\n  ///this part is going to render \r\n  render(){\r\n    const {teachersName, sessionsName, generatedTimeTable, progressValue} = this.state; //values from state\r\n    \r\n    return (\r\n       <div className=\"App\">\r\n\r\n        {/* toast notification properties */}\r\n        <ToastContainer autoClose={5000} position={toast.POSITION.TOP_RIGHT} /> \r\n          \r\n        {/* <Route render = {(props) => < PrimarySearchAppBar {...props} />} /> */}\r\n        \r\n\r\n        {/* pagination component to track components and progress */}\r\n        <Pagination onProgressValue = {progressValue} />\r\n\r\n          {/* the componets in the switch will be handled according to path */}\r\n          <Switch>\r\n            {/* calling the PrimarySearchAppBar component and passing the mehtod reference to call from there*/}\r\n            \r\n            \r\n\r\n            {/* if url path matches to /home/classrooms then render this component */}\r\n            <Route path = \"/\" exact render = {(props) => < ClassRooms {...props} onClassRooms = {this.handleClassRooms} />} />\r\n            \r\n            {/* following compnents will be render on the bases of url path and \r\n              can be access if progress value will matched with the conditions and \r\n              passing the values or reference of methods to call from these component like handleClasses*/}\r\n              \r\n            {\r\n              progressValue === 25 ?                                  \r\n              <Route path = \"/home/classes\" exact render={(props) => < Classes {...props} onClasses = {this.handleClasses} />} />\r\n              : null\r\n            }\r\n\r\n            {\r\n              progressValue === 50 ? \r\n              <Route path = \"/home/teachers\" exact render = {(props) => <Teachers {...props} onHandleTeachers = {this.handleTeachers} />} />\r\n              : null\r\n            }\r\n            \r\n            {\r\n              progressValue === 75 ? \r\n              <Route path = \"/home/courses\" exact render = {(props) => <Courses {...props} onTeachersName = {teachersName} onSessionsName = {sessionsName} onCourses = {this.handelCourses} />} />\r\n              : null\r\n            }\r\n\r\n            {\r\n              progressValue === 100 ? \r\n              <Route path = \"/home/table\" exact render = {(props) => <TimeTable {...props} onGenerateTable = {this.generateTable} onGeneratedTimeTable = {generatedTimeTable} />} />\r\n              : null\r\n            }\r\n            {/* if didnot match any of above path then redirect that to this path */}\r\n            <Redirect to=\"/\" />\r\n          </Switch>\r\n        <Footer2 /> {/* footer of the application */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;   //default export app componet to handle in index.js file\r\n"]},"metadata":{},"sourceType":"module"}