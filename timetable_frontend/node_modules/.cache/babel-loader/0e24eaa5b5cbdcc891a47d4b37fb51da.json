{"ast":null,"code":"var _jsxFileName = \"E:\\\\f\\\\Semester Works\\\\4rth Semester\\\\Analysis of Algorithms\\\\myProj\\\\CS311S20PID25\\\\timetable_frontend\\\\src\\\\appBar\\\\appBar.jsx\";\nimport React, { Component } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { Link } from \"react-router-dom\";\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Logo from \"../assets/az_time_schedular.png\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  menuButton: {\n    marginRight: theme.spacing(2)\n  }\n}));\n\nclass PrimarySearchAppBar extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      marginLeftLogo: 20 //to hadnle margin conditionally\n\n    };\n\n    this.renderPagination = () => {\n      this.props.history.push(\"/\"); //changing url \n\n      window.location.reload(true); //reloading the page \n    };\n\n    this.setMarginLeft = () => {\n      if (window.innerWidth <= 700) {\n        this.setState({\n          marginLeftLogo: 2\n        });\n      } else {\n        this.setState({\n          marginLeftLogo: 20\n        });\n      }\n    };\n\n    this.updateDimensions = i => {\n      this.setState({\n        width: window.innerWidth,\n        height: window.innerHeight\n      });\n\n      if (i === 1) {\n        this.setMarginLeft();\n      }\n    };\n  }\n\n  //this method will be called when component is mount\n  componentDidMount() {\n    window.addEventListener('resize', () => this.updateDimensions(1)); //to listen size change event\n\n    this.setMarginLeft();\n  } //this method will be called when component will unmount\n\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', () => this.updateDimensions(0)); //removing listner when component is unmount\n\n    this.setMarginLeft();\n  }\n\n  render() {\n    const {\n      marginLeftLogo\n    } = this.state; //values from the state\n    // app bar\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: useStyles.root,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        backgroundColor: '#202833'\n      },\n      position: \"static\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Toolbar, {\n      variant: \"dense\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: Logo,\n      width: \"250\",\n      height: \"70\",\n      style: {\n        padding: 10,\n        marginLeft: marginLeftLogo\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h6\",\n      style: {\n        marginLeft: marginLeftLogo * 2 + 10\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      onClick: this.renderPagination,\n      style: {\n        color: \"white\",\n        textDecoration: 'none'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 15\n      }\n    }, \"Home\")))));\n  }\n\n}\n\nexport default PrimarySearchAppBar;","map":{"version":3,"sources":["E:/f/Semester Works/4rth Semester/Analysis of Algorithms/myProj/CS311S20PID25/timetable_frontend/src/appBar/appBar.jsx"],"names":["React","Component","makeStyles","AppBar","Toolbar","Typography","IconButton","MenuIcon","Link","CardMedia","Logo","useStyles","theme","root","flexGrow","menuButton","marginRight","spacing","PrimarySearchAppBar","state","marginLeftLogo","renderPagination","props","history","push","window","location","reload","setMarginLeft","innerWidth","setState","updateDimensions","i","width","height","innerHeight","componentDidMount","addEventListener","componentWillUnmount","removeEventListener","render","backgroundColor","padding","marginLeft","color","textDecoration"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport {Link} from \"react-router-dom\";\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Logo from \"../assets/az_time_schedular.png\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nclass PrimarySearchAppBar extends Component{\r\n\r\n    state = {\r\n      marginLeftLogo: 20  //to hadnle margin conditionally\r\n    }\r\n\r\n    //thi will be called when home button is clicked \r\n    renderPagination = () => {\r\n        this.props.history.push(\"/\"); //changing url \r\n        window.location.reload(true);   //reloading the page \r\n    }\r\n\r\n    // changin the margin of the logo conditionally on chnage of the screen size\r\n  setMarginLeft = () => {\r\n      if(window.innerWidth <= 700){\r\n          this.setState({marginLeftLogo: 2})\r\n      }else{\r\n          this.setState({marginLeftLogo: 20})\r\n      }\r\n  }\r\n\r\n  //calling setMarginLeft method when size is chaged of the screen or at the loading of this componet\r\n  updateDimensions = (i) => {\r\n      this.setState({ width: window.innerWidth, height: window.innerHeight });\r\n      if(i === 1){\r\n          this.setMarginLeft();\r\n      }\r\n  };\r\n  \r\n  //this method will be called when component is mount\r\n  componentDidMount() {\r\n      window.addEventListener('resize', () => this.updateDimensions(1));  //to listen size change event\r\n      this.setMarginLeft();\r\n  }\r\n\r\n   //this method will be called when component will unmount\r\n  componentWillUnmount() {\r\n      window.removeEventListener('resize', () => this.updateDimensions(0)); //removing listner when component is unmount\r\n      this.setMarginLeft();\r\n  }    \r\n\r\n  render() {\r\n    \r\n    const {marginLeftLogo} = this.state;  //values from the state\r\n\r\n    // app bar\r\n    return (\r\n      <div className={useStyles.root}>\r\n        <div style={{backgroundColor: '#202833'}} position=\"static\">\r\n          <Toolbar variant=\"dense\">\r\n              <img src={Logo}  width=\"250\" height=\"70\" style={{padding: 10, marginLeft: marginLeftLogo}} />\r\n            <Typography variant=\"h6\" style={{marginLeft: marginLeftLogo * 2 + 10}}>\r\n              <Link onClick={this.renderPagination} style={{color:  \"white\", textDecoration: 'none'}} >Home</Link>\r\n            </Typography>\r\n          </Toolbar>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PrimarySearchAppBar;"]},"metadata":{},"sourceType":"module"}